{"version":3,"sources":["Graph.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","ticker","interval","viewType","highlight","useState","data","setData","mcData","setMcData","csData","setCsData","info","setInfo","activeInterval","setActiveInterval","paddingVertical","width","height","useEffect","loadNewData","baseURL","axios","get","then","response","console","log","d","prices","map","item","x","y","mcd","market_caps","csd","index","length","elementD","elementCsd","push","highestPrice","lowestPrice","Infinity","forEach","element","i","first","formatPrice","current","currentMC","formatPriceLarge","currentVolume","total_volumes","price","Intl","NumberFormat","style","minimumFractionDigits","format","notation","compactDisplay","className","stroke","Number","strokeWidth","padding","top","bottom","left","right","interpolation","containerComponent","labels","datum","labelComponent","fill","fontSize","flyoutStyle","margin","orientation","tickFormat","axis","tickLabels","App","intervals","label","value","dataInterval","setDataInterval","setViewType","fonts","font","weights","subsets","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d905d314.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  VictoryLine, VictoryChart, VictoryAxis, VictoryVoronoiContainer, VictoryTooltip\n} from \"victory\";\nimport axios from \"axios\";\nimport './Graph.scss';\n\nconst Graph = ({ticker, interval, viewType, highlight=null}) => {\n  const [data, setData] = useState(null);\n  const [mcData, setMcData] = useState(null);\n  const [csData, setCsData] = useState(null);\n  const [info, setInfo] = useState(null);\n  const [activeInterval, setActiveInterval] = useState(null)\n\n  const paddingVertical = 20;\n  const paddingHorizontal = 6;\n  const paddingBottom = 6;\n  const width = 428;\n  const height = 140;\n\n  useEffect(() => {\n    if (interval !== activeInterval) {\n      loadNewData();\n      setActiveInterval(interval)\n    }\n  }, [interval]);\n\n  const loadNewData = () => {\n    const baseURL = `https://api.coingecko.com/api/v3/coins/${ticker}/market_chart?vs_currency=usd&days=${interval}`;\n    // const baseURL = `https://api.coingecko.com/api/v3/coins/${ticker}/market_chart?vs_currency=usd&interval=daily&days=${interval}`;\n    axios.get(baseURL).then((response) => {\n      console.log('response', response);\n\n      let d = response.data.prices.map((item) => ({\n        x: item[0],\n        y: item[1],\n      }));\n      setData(d);\n\n      let mcd = response.data.market_caps.map((item) => ({\n        x: item[0],\n        y: item[1],\n      }));\n      setMcData(mcd);\n\n      let csd = [];\n\n      for (let index = 0; index < d.length; index++) {\n        const elementD = d[index];\n        const elementMcd = mcd[index];\n        const elementCsd = elementMcd.y / elementD.y;\n        csd.push({\n          x: d[index].x,\n          y: elementCsd,\n        })\n      }\n      setCsData(csd);\n\n      let highestPrice = 0;\n      let lowestPrice = Infinity;\n\n      response.data.prices.forEach(element => {\n        if (element[1] > highestPrice) {\n          highestPrice = element[1];\n        }\n        if (element[1] < lowestPrice) {\n          lowestPrice = element[1];\n        }\n      });\n\n      let i = {\n        first: formatPrice(response.data.prices[0][1]),\n        current: formatPrice(response.data.prices[response.data.prices.length - 1][1]),\n        highestPrice: formatPrice(highestPrice),\n        lowestPrice: formatPrice(lowestPrice),\n        currentMC: formatPriceLarge(response.data.market_caps[response.data.market_caps.length - 1][1]),\n        currentVolume: formatPriceLarge(response.data.total_volumes[response.data.total_volumes.length - 1][1]),\n      }\n      setInfo(i)\n    });\n  }\n\n  const formatPrice = (price) => {\n    // console.log('price',parseFloat(price), ((parseFloat(price) < 1) ? 4 : 2));\n    const formatConfig = new Intl.NumberFormat(\"en-US\", {\n      style: \"decimal\",\n      minimumFractionDigits: 4\n    });\n  \n    return formatConfig.format(price);\n  };\n\n  const formatPriceLarge = (price) => {\n    // console.log('price',parseFloat(price), ((parseFloat(price) < 1) ? 4 : 2));\n    const formatConfig = new Intl.NumberFormat(\"en-US\", {\n      style: \"decimal\",\n      notation: \"compact\",\n      compactDisplay: \"short\"\n    });\n  \n    return formatConfig.format(price);\n  };\n\n  return (\n    <div className=\"graph\">\n      <p className=\"graph-name\">\n        <span className={\"ticker \" + (highlight ? 'highlight' : '')}>{ticker}</span>{' ' + info?.current}<br/>\n        <span className={\"indicator\"}>H </span>{info?.highestPrice}\n        <span className={\"indicator\"}> L </span>{info?.lowestPrice}\n      </p>\n      <p className=\"graph-details\">\n        <span className={\"indicator\"}>M </span>{info?.currentMC}\n        <span className={\"indicator\"}> V </span>{info?.currentVolume}\n      </p>\n      {!viewType && data && <div className=\"graph-holder\">\n        <VictoryLine\n            style={{\n              data: {\n                stroke: Number(info?.current) > Number(info?.first) ? \"#c5ffc7\" : \"#f994b0\",\n                strokeWidth: 2\n              }\n            }}\n            width={width}\n            height={height}\n            padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n            interpolation=\"linear\"\n            data={data}\n          />\n      </div>}\n      {viewType && data && <div className=\"graph-holder\">\n        <VictoryChart\n          width={width}\n          height={height}\n          padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n          containerComponent={\n            <VictoryVoronoiContainer\n             labels={({ datum }) => formatPrice(datum.y)}\n              labelComponent={\n                <VictoryTooltip\n                  style={{\n                    fill: \"#000\",\n                    fontSize: 12\n                  }}\n                  flyoutStyle={{\n                    fill: \"#fff\",\n                    stroke: \"#0000ff\",\n                    strokeWidth: 0,\n                    margin: 6\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLine\n            style={{\n              data: {\n                stroke: Number(info?.current) > Number(info?.first) ? \"#c5ffc7\" : \"#f994b0\",\n                strokeWidth: 2\n              }\n            }}\n            width={width}\n            height={height}\n            padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n            interpolation=\"linear\"\n            data={data}\n          />\n          <VictoryAxis\n            orientation=\"bottom\"\n            tickFormat={() => \"\"}\n            style={{\n              axis: {\n                stroke: \"#fff\",\n                strokeWidth: 0\n              },\n              tickLabels: {\n                fill: \"#fff\"\n              }\n            }}\n          />\n        </VictoryChart>\n      </div>}\n\n      {viewType && mcData && <div className=\"graph-holder\">\n        <VictoryChart\n          width={width}\n          height={height}\n          padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n          containerComponent={\n            <VictoryVoronoiContainer\n             labels={({ datum }) => formatPriceLarge(datum.y)}\n              labelComponent={\n                <VictoryTooltip\n                  style={{\n                    fill: \"#000\",\n                    fontSize: 12\n                  }}\n                  flyoutStyle={{\n                    fill: \"#fff\",\n                    stroke: \"#0000ff\",\n                    strokeWidth: 0,\n                    margin: 6\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLine\n            style={{\n              data: {\n                stroke: \"#bae4fd\",\n                strokeWidth: 2\n              }\n            }}\n            width={width}\n            height={height}\n            padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n            interpolation=\"linear\"\n            data={mcData}\n          />\n          <VictoryAxis\n            orientation=\"bottom\"\n            tickFormat={() => \"\"}\n            style={{\n              axis: {\n                stroke: \"#fff\",\n                strokeWidth: 0\n              },\n              tickLabels: {\n                fill: \"#fff\"\n              }\n            }}\n          />\n        </VictoryChart>\n      </div>}\n      {viewType && csData && <div className=\"graph-holder\">\n        <VictoryChart\n          width={width}\n          height={height}\n          padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n          containerComponent={\n            <VictoryVoronoiContainer\n             labels={({ datum }) => formatPriceLarge(datum.y)}\n              labelComponent={\n                <VictoryTooltip\n                  style={{\n                    fill: \"#000\",\n                    fontSize: 12\n                  }}\n                  flyoutStyle={{\n                    fill: \"#fff\",\n                    stroke: \"#0000ff\",\n                    strokeWidth: 0,\n                    margin: 6\n                  }}\n                />\n              }\n            />\n          }\n        >\n          <VictoryLine\n            style={{\n              data: {\n                stroke: \"#fff\",\n                strokeWidth: 2\n              }\n            }}\n            width={width}\n            height={height}\n            padding={{ top: paddingVertical, bottom: paddingBottom, left: paddingHorizontal, right: paddingHorizontal }}\n            interpolation=\"linear\"\n            data={csData}\n          />\n          <VictoryAxis\n            orientation=\"bottom\"\n            tickFormat={() => \"\"}\n            style={{\n              axis: {\n                stroke: \"#fff\",\n                strokeWidth: 0\n              },\n              tickLabels: {\n                fill: \"#fff\"\n              }\n            }}\n          />\n        </VictoryChart>\n      </div>}\n    </div>\n  );\n}\n\nexport default Graph;","import { useState } from \"react\";\nimport GoogleFontLoader from 'react-google-font-loader';\n\nimport { Connection, Keypair, PublicKey } from \"@solana/web3.js\";\nimport { getOrca, OrcaFarmConfig, OrcaPoolConfig } from \"@orca-so/sdk\";\n\nimport Graph from './Graph';\nimport './App.scss';\n\nconst App = () => {\n  const intervals = [\n    {\n      label: \"1D\",\n      value: 1\n    },\n    {\n      label: \"7D\",\n      value: 7\n    },\n    {\n      label: \"1M\",\n      value: 30\n    },\n    {\n      label: \"3M\",\n      value: 90\n    },\n    {\n      label: \"6M\",\n      value: 180\n    }\n  ];\n\n  const [dataInterval, setDataInterval] = useState(intervals[1].value);\n  const [viewType, setViewType] = useState(0);\n\n  // const connection = new Connection(\"https://api.mainnet-beta.solana.com\", \"singleGossip\");\n  // const orca = getOrca(connection);\n  // const keys = Object.keys(OrcaPoolConfig);\n  // const tokens = [];\n\n  // keys.forEach(item => {\n  //   const pool = orca.getPool(OrcaPoolConfig[item])\n  //   const tokenIDs = pool.poolParams.tokenIds;\n  //   tokens.push({name: pool.poolParams.tokens[tokenIDs[0]].name, id: tokenIDs[0] })\n  //   tokens.push({name: pool.poolParams.tokens[tokenIDs[1]].name, id: tokenIDs[1] })\n  // })\n  // console.log('+++ tokens', tokens);\n\n  // const pk = new PublicKey('JET6zMJWkCN9tpRT2v2jfAmm5VnQFDpUBCyaKojmGtz')\n  // console.log('+++ pk', pk);\n  // connection.getAccountInfo(pk).then(response => {\n  //   console.log('response', response);\n  // })\n\n  return (\n    <>\n      <GoogleFontLoader\n        fonts={[\n          {\n            font: 'Roboto Mono',\n            weights: [400, 700],\n          },\n        ]}\n        subsets={['latin-ext']}\n      />\n      <div className=\"app\">\n        <div className=\"menu-holder\">\n          {intervals.map((interval) => (\n            <button\n              key={interval.value}\n              className={dataInterval === interval.value ? \"active\" : \"inactive\"}\n              onClick={() => setDataInterval(interval.value)}\n            >\n              {interval.label}\n            </button>\n          ))}\n        <div className=\"menu-spacer\"></div>\n          <button\n            key={10000}\n            className={viewType === 1 ? \"active\" : \"inactive\"}\n            onClick={() => setViewType(viewType === 0 ? 1 : 0)}\n          >\n            {'INF'}\n          </button>\n        </div>\n        <p className=\"graph-group-name\">MAIN L1</p>\n        <div className=\"graphs\">\n          <Graph ticker={'bitcoin'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'ethereum'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'solana'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'avalanche-2'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'terra-luna'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'tezos'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'near'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'joe'} interval={dataInterval} viewType={viewType} />\n        </div>\n        <p className=\"graph-group-name\">SOL ECO</p>\n        <div className=\"graphs\">\n          <Graph ticker={'raydium'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'serum'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'orca'} interval={dataInterval} highlight={true} viewType={viewType} />\n          <Graph ticker={'samoyedcoin'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'step-finance'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'mango-markets'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'apricot'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'solfarm'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'sunny-aggregator'} interval={dataInterval} viewType={viewType} />\n          apricot\n        </div>\n        <p className=\"graph-group-name\">ETH ECO</p>\n        <div className=\"graphs\">\n          <Graph ticker={'aave'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'sushi'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'matic-network'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'uniswap'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'curve-dao-token'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'chainlink'} interval={dataInterval} viewType={viewType} />\n        </div>\n        <p className=\"graph-group-name\">BNB ECO</p>\n        <div className=\"graphs\">\n          <Graph ticker={'binancecoin'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'swipe'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'pancakeswap-token'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'bakerytoken'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'superfarm'} interval={dataInterval} viewType={viewType} />\n          <Graph ticker={'force-protocol'} interval={dataInterval} viewType={viewType} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}